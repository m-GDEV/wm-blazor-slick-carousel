<div class="WMBSC loading">
    <div class="WMBSC-content" @ref="WMBSCReference">@BlazorSlickCarouselContent</div>
    @if (BlazorSlickCarouselLoading == null)
    {
        <div class="WMBSC-loading">Loading...</div>
    }
    else
    {
        <div class="WMBSC-loading">@BlazorSlickCarouselLoading</div>
    }
</div>

@using Microsoft.JSInterop

@code {
    [Parameter]
    public RenderFragment BlazorSlickCarouselContent { get; set; }

    [Parameter]
    public RenderFragment BlazorSlickCarouselLoading { get; set; }

    [Parameter]
    public bool addJquery { get; set; }

    [Parameter]
    public WMBSCConfigurations Configurations { get; set; }

    [Parameter]
    public string ProjectName { get; set; }

    [Parameter]
    public string CallbackAfterChange { get; set;}

    [Parameter]
    public string CallbackBeforeChange { get; set;}

    [Parameter]
    public string CallbackInit { get; set;}

    [Inject]
    protected IJSRuntime jsRuntime { get; set; }

    [Inject]
    protected IWMBSC TheWMBSC { get; set; }

    ElementReference WMBSCReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Dictionary<string, string> ConfigCallbacks = new Dictionary<string, string>();
                ConfigCallbacks["projectName"] = ProjectName;
                ConfigCallbacks["callbackAfterChange"] = CallbackAfterChange;
                ConfigCallbacks["callbackBeforeChange"] = CallbackBeforeChange;
                ConfigCallbacks["callbackInit"] = CallbackInit;
            await TheWMBSC.Init(WMBSCReference, Configurations, ConfigCallbacks);
        }
    }

    public async Task<int> CurrentSlide() {
        return await TheWMBSC.SlickCurrentSlide();
    }

    public async Task GoTo(int slideNumber) {
        await TheWMBSC.SlickGoTo(slideNumber);
    }

    public async Task Next() {
        await TheWMBSC.SlickNext();
    }

    public async Task Prev() {
        await TheWMBSC.SlickPrev();
    }
    
}